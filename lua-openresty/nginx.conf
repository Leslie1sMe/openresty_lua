#首先给出一个nginx优化的基本思路,下面是一份nginx配置文件和讲解：
user  nobody;#默认
worker_processes  1; #设置为cpu的内核数，保证cpu的充分利用。
如果开启了openssl，gzip更应该设置为和逻辑cpu的核数相同甚至2倍大，如果nginx服务器
还有其他服务，可以考虑适当减小，我们一般设置为和cpu内核数一样大即可。

#error_log  logs/error.log; 错误日志的文件存放位置，以及错误提示级别。
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

events {
    use epoll;
    #使用epoll数据模型来处理事件。
    worker_connections  1024;
    #建议和工作进程的#建议和系统的最大文件打开数保持一致,具体的办法是
    #使用ulimit -n去查看系统的最大文件打开数，如果文件打开数设置的太小，那么我们将通过修改/etc/security
    #/limits.conf来增加到一个合理的数值，然后重启计算机即可生效，然后我们修改一下nginx的worker_connections
    #和worker_rlimit_nofile_number，然后重新启动nginx，查看我们的设置是否生效只需要命令 cat /proc/nginx_pid/limits即可。
    multi_accept on;
    #一个工作进程同时刻舟可以接收多个链接。
}


http {
    include       mime.types;#文件扩展名的映射
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    tcp_nopush     on;
    tcp_nodelay    on;
    keepalive_timeout 65;
    gzip  on;#

    server {
        listen       80;
        server_name  localhost;

        charset utf-8;

        access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        error_page  404=200  /404.html#根据返回码重定向，如果不想修改uri只想
        #重定向到另一个location中处理可以使用：
	#error_page 404 @fallback;
	#location @fallback{
	#proxy_pass http://somew	proxy_pass http://somewahere;here;
	#}

        # redirect server error pages to the static page /50x.html
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;#配置SSL证书。
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
